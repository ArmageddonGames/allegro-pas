
  This document explains how to use Allegro.pas with the Free Pascal compiler.
  This works also for Lazarus IDE, but you should read "lazarus.txt" too for
  more information.  For Delphi read "delphi.txt".

  Note that you must install Allegro first.  Read "windows.txt" or "linux.txt".

The Allegro.pas units
---------------------

  All units needed to use Allegro.pas are in the "~/lib" directory.  You'll
  need all "pas", "inc" and "cfg" files.

  You have different ways to "add" Allegro.pas to your projects:

Adding to the project
---------------------

  Copy the "~/lib" directory to the same directory of the sources of your game.

  To keep things ordered I recommend you to keep the Allegro.pas in a
  subdirectory and name it "allegro" and use the FPC option -Fu when compiling.
  Don't forget to use -Fi too as Allegro.pas units needs to include some files.

Adding to the fpc.cfg file
--------------------------

  If you're used to the fpc.cfg file may be it is more easy to add the "~/lib"
  directory to that file, both units and include.

Adding to Free Pascal or Lazarus installation
---------------------------------------------

  My favorite is to copy the "~/lib" directory to the RTL units directory of
  your Free Pascal installation.  This directory varies depending on the
  operating system and Free Pascal version but it should be something like:

c:\fpc\<version_number>\units\<architecture>

  or

/usr/lib/fpc/<version_number>/units/<architecture>

  Where <version_number> is the version of FPC (i.e. 3.0.0) and <architecture>
  is the architecture of your operating system (i.e. x86_64-linux, 1386-win32,
  ...).

  I recommend you to put files inside a subdirectory named "allegro5".

Differences between Delphi, Free Pascal and Lazarus
---------------------------------------------------

  Note that there are language differences between Delphi and Free Pascal (even
  using Delphi mode) so don't expect that your code is portable through both
  compilers.  See the examples sources to see how I've tried to write code that
  worked in both compilers.

  Also note STRING management may be problematic.  Free Pascal uses UTF-8 by
  default (CHAR) and Delphi uses UTF-16 by default (WIDECHAR).  Allegro expects
  ASCII/UTF-8 by default, so Delphi compiler may warn about text conversions.
  To reduce the warnings and make it less prone to errors use ANSISTRING.  I'll
  work in this issue.

Windows manifest
----------------

  If you're using Windows, may be you found that your programs may not work, or
  they do, but a warning window appears talking about "Windows execution
  privileges" or similar.  This is because the modern Windows weird permission
  system.

  To solve this you should add a "manifest" to your programs.  With help from
  the Lazarus community, I've created default manifest files you can find in
  the ~/examples directory.  Copy both "manifest.rc" and "manifest.xml" in your
  source directory and add the next compiler directive in your program source,
  between your "PROGRAM" and your "USES" directives as you can see in any of
  the examples:

  {$IFDEF WINDOWS}{$R 'manifest.rc'}{$ENDIF}

  You don't need to change any of the files, as only installation and few
  administration programs (and not all them) may need some special stuff (which
  makes Windows permission system even more weirdest and uselessest I thought).
  Anyway you can open them and see how they are.

  This works also for Lazarus.
